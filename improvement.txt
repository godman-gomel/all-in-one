***Итерации доработки приложения All-in-one

Итерация 1: Базовый интерфейс и управление файлами
---------------------------------------------------
1. Создать главное окно приложения на PyQt5.
2. Добавить панель инструментов с основными действиями:
   - Копка «Добавить» выбранные файлы/папки в список для анализа.
   - Кнопка «Удалить» файлы/папки из списка.
Данные кнопки находятся под виджетом со списком добавленных файлов.
3. Реализовать виджет со списком добавленных аудиофайлов (список), отображающий папку (где хранится файл), имя файла и статус обработки. Например:
=Папка 1
- Файл1.mp3 +
- Файл2.mp3 -
Где «+» означает, что файл обработан, а «-», что еще не обрабатывался.
4. Обеспечить возможность массового добавления файлов (drag&drop, выбор нескольких файлов, каталогов и вложенных каталогов).
5. Подготовить структуру проекта для будущих расширений GUI. Важно, что все указанные в итерациях элементы находятся в едином, логически устроенном окне, без лишнего переключения между вкладками. Единственное, выбор настроек может быть вынесено в меню «Настройки», а прогресс анализа и логи - во всплывающее окно. Главное, чтобы работа со списком файлов и просмотр полученных данных анализа был на единой вкладке.
6. Список добавленных файлов должен располагаться слева окна и занимать все окно по высоте. Размеры всех виджетов и таблиц пользователь может регулировать под себя. Последние отрегулированные размеры сохраняются при повторном открытии приложения.

Итерация 2: Запуск анализа и управление параметрами
----------------------------------------------------
1. Добавить панель или диалог настроек анализа:
   - Включение/отключение извлечения активаций и эмбеддингов.
   - Настройка путей к временным каталогам (demix_dir, spec_dir).
   - Параметры перезаписи/многопроцессности.
2. Реализовать кнопки для запуска анализа:
- Кнопка «Анализ выбранных» - запускает анализ выбранных файлов.
- Кнопка «Анализировать все» - запускает анализ всех добавленных в список файлов. При этом, если в списке уже есть ранее проанализированные файлы, то появляется всплывающее окно с кнопками: «Выберете действие:
Кнопка «Анализировать только еще не анализированные»;
Кнопка «Анализировать все».
3. Обеспечить одновременное выполнение нескольких задач анализа с отображением прогресса (использовать QThread или QtConcurrent). В настройках возможность выбирать – подключать ли выполнение нескольких задача анализа одновременно, или файлы будут анализировать по очереди.
4. Сохранять параметры между запусками программы (например, через QSettings).

Итерация 3: Отображение прогресса и логирование
-----------------------------------------------
1. Добавить индикатор общего прогресса и прогресса для каждого файла.
2. Реализовать окно/панель логов для вывода сообщений из процесса анализа (подключение логгера из allin1).
3. Сделать возможным прерывание текущего анализа с сохранением уже полученных результатов.
4. Предусмотреть уведомления об ошибках и успешном завершении.

Итерация 4: Сохранение и просмотр результатов
---------------------------------------------
1. Добавить настройку места сохранения результатов:
   - Отдельная папка для каждого файла или общая папка.
   - Возможность выбирать сохранение по умолчание - файлы анализа сохраняются рядом с исходным файлом.
- Возможность выбирать, сохранять результаты анализа каждый в отдельном файле, или все в одном файле.
   - Выбор состава сохраняемых данных (путь к файлу, id файла и сегмента, активации, эмбеддинги, BPM, сегменты и т.п.).
2. Создать интерфейс просмотра результатов:
   - Таблица со сводной информацией (путь, BPM, структура и др.).
   - Просмотр графиков и прослушивание сонфицированных аудио.
3. Добавить возможность выбора формата экспорта JSON/CSV.
4. Реализовать экспорт выбранных данных в JSON/CSV, т.е. чтобы пользователь мог выбирать определенный проанализированный файл/файлы для экспорта.
5. Возможность загружать файл/папки с данными анализа. Если пользователь захочет просмотреть или пересохранить данные анализа, то он может выбрать каталог или отдельные файлы, где хранятся файлы с данными анализа и загрузить их в приложение для просмотра.

Требования и зависимости
------------------------
- Python 3.10+
- PyQt5
- numpy, librosa и остальные зависимости пакета allin1
- Опционально: дополнительные библиотеки для улучшенной визуализации (например, pyqtgraph) и упаковки приложения (PyInstaller)
